[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the [group name] project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://[your-project-url].\nSummary\n[provide a biref summary of your project]\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Cerem Üstün. I am a junior at Hacettepe University and my major is industrial engineering.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 2022 - ongoing."
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm aaa, position xx, year xxx\nFirm bbb, position yyy, year yyy"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts.\n\n\n\n\n\nFirst, “polls_us_election_2016” data set is imported by the codes shown below from the dslabs package.\n\nlibrary(dslabs)\ndata(polls_us_election_2016)\n\nTo display the first 10 rows of the data set, we may use head() function. head() function shows the first lines (rows) of the data frame, and we can choose the number of rows we want to see.\n\nhead(polls_us_election_2016, 10)\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll  &lt;NA&gt;       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00               NA\n2          lv           38.03         35.69            5.46               NA\n3          lv           42.00         39.00            6.00               NA\n4          lv           45.00         41.00            5.00               NA\n5          rv           47.00         43.00            3.00               NA\n6          lv           48.00         44.00            3.00               NA\n7          lv           45.00         41.00            5.00               NA\n8          lv           44.00         40.00            6.00               NA\n9          lv           46.00         44.00            6.00               NA\n10         lv           41.20         42.70            7.10               NA\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221               NA\n2         43.34557      41.21439        5.175792               NA\n3         42.02638      38.81620        6.844734               NA\n4         45.65676      40.92004        6.069454               NA\n5         46.84089      42.33184        3.726098               NA\n6         49.02208      43.95631        3.057876               NA\n7         45.11649      40.92722        4.341786               NA\n8         43.58576      40.77325        5.365788               NA\n9         44.82594      41.59978        7.870127               NA\n10        42.92745      42.23545        6.316175               NA\n\n\nNext, total number of NA values in the entire data set is wanted to be calculated. If we want to calculate the total number of something we use sum() function. For this, is.na() will help us, too.\n\ntotal_number_na &lt;- sum(is.na(polls_us_election_2016))\n\nNow, it’s wanted to replace all NA values:\n\nwith birth year for numeric columns,\nwith first name for character or factor columns.\n\nAlso, we will store this new data set as a new object.\n\nnew_data_set &lt;- polls_us_election_2016\nbirth_year &lt;- 2004\nfirst_name &lt;- \"Cerem\"\n\nfor (col in names(new_data_set)) {\n  if (is.numeric(new_data_set[[col]])) {\n    #if the column is numeric\n    new_data_set[[col]][is.na(new_data_set[[col]])] &lt;- birth_year\n     #replace NA with birth year\n  }\n else if (is.character(new_data_set[[col]])) {\n    #if the column is character\n    new_data_set[[col]][is.na(new_data_set[[col]])] &lt;- first_name\n     #replace NA with first name\n }\n  else if (is.factor(new_data_set[[col]])) {\n    #if the column is factor\n    levels(new_data_set[[col]]) &lt;- c(levels(new_data_set[[col]]), first_name)\n    #adding the first_name to the factor levels\n    new_data_set[[col]][is.na(new_data_set[[col]])] &lt;- first_name\n    #replace NA with first name\n  }\n}\n\nFinally, we’ll print the first 10 rows of the new data frame and the total number of NAs remaining in the new data frame. To do this, we’ll use head() and sum() functions again.\n\nhead(new_data_set, 10)\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll Cerem       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00             2004\n2          lv           38.03         35.69            5.46             2004\n3          lv           42.00         39.00            6.00             2004\n4          lv           45.00         41.00            5.00             2004\n5          rv           47.00         43.00            3.00             2004\n6          lv           48.00         44.00            3.00             2004\n7          lv           45.00         41.00            5.00             2004\n8          lv           44.00         40.00            6.00             2004\n9          lv           46.00         44.00            6.00             2004\n10         lv           41.20         42.70            7.10             2004\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221             2004\n2         43.34557      41.21439        5.175792             2004\n3         42.02638      38.81620        6.844734             2004\n4         45.65676      40.92004        6.069454             2004\n5         46.84089      42.33184        3.726098             2004\n6         49.02208      43.95631        3.057876             2004\n7         45.11649      40.92722        4.341786             2004\n8         43.58576      40.77325        5.365788             2004\n9         44.82594      41.59978        7.870127             2004\n10        42.92745      42.23545        6.316175             2004\n\nprint(new_total_number_na &lt;- sum(is.na(new_data_set)))\n\n[1] 0",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Fall 2023] EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on October 25, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "",
    "text": "First, “polls_us_election_2016” data set is imported by the codes shown below from the dslabs package.\n\nlibrary(dslabs)\ndata(polls_us_election_2016)\n\nTo display the first 10 rows of the data set, we may use head() function. head() function shows the first lines (rows) of the data frame, and we can choose the number of rows we want to see.\n\nhead(polls_us_election_2016, 10)\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll  &lt;NA&gt;       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00               NA\n2          lv           38.03         35.69            5.46               NA\n3          lv           42.00         39.00            6.00               NA\n4          lv           45.00         41.00            5.00               NA\n5          rv           47.00         43.00            3.00               NA\n6          lv           48.00         44.00            3.00               NA\n7          lv           45.00         41.00            5.00               NA\n8          lv           44.00         40.00            6.00               NA\n9          lv           46.00         44.00            6.00               NA\n10         lv           41.20         42.70            7.10               NA\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221               NA\n2         43.34557      41.21439        5.175792               NA\n3         42.02638      38.81620        6.844734               NA\n4         45.65676      40.92004        6.069454               NA\n5         46.84089      42.33184        3.726098               NA\n6         49.02208      43.95631        3.057876               NA\n7         45.11649      40.92722        4.341786               NA\n8         43.58576      40.77325        5.365788               NA\n9         44.82594      41.59978        7.870127               NA\n10        42.92745      42.23545        6.316175               NA\n\n\nNext, total number of NA values in the entire data set is wanted to be calculated. If we want to calculate the total number of something we use sum() function. For this, is.na() will help us, too.\n\ntotal_number_na &lt;- sum(is.na(polls_us_election_2016))\n\nNow, it’s wanted to replace all NA values:\n\nwith birth year for numeric columns,\nwith first name for character or factor columns.\n\nAlso, we will store this new data set as a new object.\n\nnew_data_set &lt;- polls_us_election_2016\nbirth_year &lt;- 2004\nfirst_name &lt;- \"Cerem\"\n\nfor (col in names(new_data_set)) {\n  if (is.numeric(new_data_set[[col]])) {\n    #if the column is numeric\n    new_data_set[[col]][is.na(new_data_set[[col]])] &lt;- birth_year\n     #replace NA with birth year\n  }\n else if (is.character(new_data_set[[col]])) {\n    #if the column is character\n    new_data_set[[col]][is.na(new_data_set[[col]])] &lt;- first_name\n     #replace NA with first name\n }\n  else if (is.factor(new_data_set[[col]])) {\n    #if the column is factor\n    levels(new_data_set[[col]]) &lt;- c(levels(new_data_set[[col]]), first_name)\n    #adding the first_name to the factor levels\n    new_data_set[[col]][is.na(new_data_set[[col]])] &lt;- first_name\n    #replace NA with first name\n  }\n}\n\nFinally, we’ll print the first 10 rows of the new data frame and the total number of NAs remaining in the new data frame. To do this, we’ll use head() and sum() functions again.\n\nhead(new_data_set, 10)\n\n        state  startdate    enddate\n1        U.S. 2016-11-03 2016-11-06\n2        U.S. 2016-11-01 2016-11-07\n3        U.S. 2016-11-02 2016-11-06\n4        U.S. 2016-11-04 2016-11-07\n5        U.S. 2016-11-03 2016-11-06\n6        U.S. 2016-11-03 2016-11-06\n7        U.S. 2016-11-02 2016-11-06\n8        U.S. 2016-11-03 2016-11-05\n9  New Mexico 2016-11-06 2016-11-06\n10       U.S. 2016-11-04 2016-11-07\n                                                     pollster grade samplesize\n1                                    ABC News/Washington Post    A+       2220\n2                                     Google Consumer Surveys     B      26574\n3                                                       Ipsos    A-       2195\n4                                                      YouGov     B       3677\n5                                            Gravis Marketing    B-      16639\n6  Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n7                                     CBS News/New York Times    A-       1426\n8                                NBC News/Wall Street Journal    A-       1282\n9                                                    Zia Poll Cerem       8439\n10                                                   IBD/TIPP    A-       1107\n   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1          lv           47.00         43.00            4.00             2004\n2          lv           38.03         35.69            5.46             2004\n3          lv           42.00         39.00            6.00             2004\n4          lv           45.00         41.00            5.00             2004\n5          rv           47.00         43.00            3.00             2004\n6          lv           48.00         44.00            3.00             2004\n7          lv           45.00         41.00            5.00             2004\n8          lv           44.00         40.00            6.00             2004\n9          lv           46.00         44.00            6.00             2004\n10         lv           41.20         42.70            7.10             2004\n   adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1         45.20163      41.72430        4.626221             2004\n2         43.34557      41.21439        5.175792             2004\n3         42.02638      38.81620        6.844734             2004\n4         45.65676      40.92004        6.069454             2004\n5         46.84089      42.33184        3.726098             2004\n6         49.02208      43.95631        3.057876             2004\n7         45.11649      40.92722        4.341786             2004\n8         43.58576      40.77325        5.365788             2004\n9         44.82594      41.59978        7.870127             2004\n10        42.92745      42.23545        6.316175             2004\n\nprint(new_total_number_na &lt;- sum(is.na(new_data_set)))\n\n[1] 0",
    "crumbs": [
      "Assignment 1"
    ]
  }
]